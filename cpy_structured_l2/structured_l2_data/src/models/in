Help on module argparse:

NNAAMMEE
    argparse - Command-line parsing library

MMOODDUULLEE  RREEFFEERREENNCCEE
    https://docs.python.org/3.6/library/argparse
    
    The following documentation is automatically generated from the Python
    source files.  It may be incomplete, incorrect or include features that
    are considered implementation detail and may vary between Python
    implementations.  When in doubt, consult the module reference at the
    location listed above.

DDEESSCCRRIIPPTTIIOONN
    This module is an optparse-inspired command-line parsing library that:
    
        - handles both optional and positional arguments
        - produces highly informative usage messages
        - supports parsers that dispatch to sub-parsers
    
    The following is a simple usage example that sums integers from the
    command-line and writes the result to a file::
    
        parser = argparse.ArgumentParser(
            description='sum the integers at the command line')
        parser.add_argument(
            'integers', metavar='int', nargs='+', type=int,
            help='an integer to be summed')
        parser.add_argument(
            '--log', default=sys.stdout, type=argparse.FileType('w'),
            help='the file where the sum should be written')
        args = parser.parse_args()
        args.log.write('%s' % sum(args.integers))
        args.log.close()
    
    The module contains the following public classes:
    
        - ArgumentParser -- The main entry point for command-line parsing. As the
            example above shows, the add_argument() method is used to populate
            the parser with actions for optional and positional arguments. Then
            the parse_args() method is invoked to convert the args at the
            command-line into an object with attributes.
    
        - ArgumentError -- The exception raised by ArgumentParser objects when
            there are errors with the parser's actions. Errors raised while
            parsing the command-line are caught by ArgumentParser and emitted
            as command-line messages.
    
        - FileType -- A factory for defining types of files to be created. As the
            example above shows, instances of FileType are typically passed as
            the type= argument of add_argument() calls.
    
        - Action -- The base class for parser actions. Typically actions are
            selected by passing strings like 'store_true' or 'append_const' to
            the action= argument of add_argument(). However, for greater
            customization of ArgumentParser actions, subclasses of Action may
            be defined and passed as the action= argument.
    
        - HelpFormatter, RawDescriptionHelpFormatter, RawTextHelpFormatter,
            ArgumentDefaultsHelpFormatter -- Formatter classes which
            may be passed as the formatter_class= argument to the
            ArgumentParser constructor. HelpFormatter is the default,
            RawDescriptionHelpFormatter and RawTextHelpFormatter tell the parser
            not to change the formatting for help text, and
            ArgumentDefaultsHelpFormatter adds information about argument defaults
            to the help.
    
    All other classes in this module are considered implementation details.
    (Also note that HelpFormatter and RawDescriptionHelpFormatter are only
    considered public as object names -- the API of the formatter objects is
    still considered an implementation detail.)

CCLLAASSSSEESS
    _ActionsContainer(builtins.object)
        ArgumentParser(_AttributeHolder, _ActionsContainer)
    _AttributeHolder(builtins.object)
        Action
        ArgumentParser(_AttributeHolder, _ActionsContainer)
        Namespace
    builtins.Exception(builtins.BaseException)
        ArgumentError
        ArgumentTypeError
    builtins.object
        FileType
        HelpFormatter
            ArgumentDefaultsHelpFormatter
            MetavarTypeHelpFormatter
            RawDescriptionHelpFormatter
                RawTextHelpFormatter
    
    class AAccttiioonn(_AttributeHolder)
     |  Information about how to convert command line strings to Python objects.
     |  
     |  Action objects are used by an ArgumentParser to represent the information
     |  needed to parse a single argument from one or more strings from the
     |  command line. The keyword arguments to the Action constructor are also
     |  all attributes of Action instances.
     |  
     |  Keyword Arguments:
     |  
     |      - option_strings -- A list of command-line option strings which
     |          should be associated with this action.
     |  
     |      - dest -- The name of the attribute to hold the created object(s)
     |  
     |      - nargs -- The number of command-line arguments that should be
     |          consumed. By default, one argument will be consumed and a single
     |          value will be produced.  Other values include:
     |              - N (an integer) consumes N arguments (and produces a list)
     |              - '?' consumes zero or one arguments
     |              - '*' consumes zero or more arguments (and produces a list)
     |              - '+' consumes one or more arguments (and produces a list)
     |          Note that the difference between the default and nargs=1 is that
     |          with the default, a single value will be produced, while with
     |          nargs=1, a list containing a single value will be produced.
     |  
     |      - const -- The value to be produced if the option is specified and the
     |          option uses an action that takes no values.
     |  
     |      - default -- The value to be produced if the option is not specified.
     |  
     |      - type -- A callable that accepts a single string argument, and
     |          returns the converted value.  The standard Python types str, int,
     |          float, and complex are useful examples of such callables.  If None,
     |          str is used.
     |  
     |      - choices -- A container of values that should be allowed. If not None,
     |          after a command-line argument has been converted to the appropriate
     |          type, an exception will be raised if it is not a member of this
     |          collection.
     |  
     |      - required -- True if the action must always be specified at the
     |          command line. This is only meaningful for optional command-line
     |          arguments.
     |  
     |      - help -- The help string describing the argument.
     |  
     |      - metavar -- The name to be used for the option's argument with the
     |          help string. If None, the 'dest' value will be used as the name.
     |  
     |  Method resolution order:
     |      Action
     |      _AttributeHolder
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____ccaallll____(self, parser, namespace, values, option_string=None)
     |      Call self as a function.
     |  
     |  ____iinniitt____(self, option_strings, dest, nargs=None, const=None, default=None, type=None, choices=None, required=False, help=None, metavar=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _AttributeHolder:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _AttributeHolder:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class AArrgguummeennttDDeeffaauullttssHHeellppFFoorrmmaatttteerr(HelpFormatter)
     |  Help message formatter which adds default values to argument help.
     |  
     |  Only the name of this class is considered a public API. All the methods
     |  provided by the class are considered an implementation detail.
     |  
     |  Method resolution order:
     |      ArgumentDefaultsHelpFormatter
     |      HelpFormatter
     |      builtins.object
     |  
     |  Methods inherited from HelpFormatter:
     |  
     |  ____iinniitt____(self, prog, indent_increment=2, max_help_position=24, width=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  aadddd__aarrgguummeenntt(self, action)
     |  
     |  aadddd__aarrgguummeennttss(self, actions)
     |  
     |  aadddd__tteexxtt(self, text)
     |  
     |  aadddd__uussaaggee(self, usage, actions, groups, prefix=None)
     |  
     |  eenndd__sseeccttiioonn(self)
     |  
     |  ffoorrmmaatt__hheellpp(self)
     |      # =======================
     |      # Help-formatting methods
     |      # =======================
     |  
     |  ssttaarrtt__sseeccttiioonn(self, heading)
     |      # ========================
     |      # Message building methods
     |      # ========================
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HelpFormatter:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class AArrgguummeennttEErrrroorr(builtins.Exception)
     |  An error from creating or using an argument (optional or positional).
     |  
     |  The string value of this exception is the message, augmented with
     |  information about the argument that caused it.
     |  
     |  Method resolution order:
     |      ArgumentError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, argument, message)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____ssttrr____(self)
     |      Return str(self).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____rreepprr____(self, /)
     |      Return repr(self).
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ddiicctt____
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class AArrgguummeennttPPaarrsseerr(_AttributeHolder, _ActionsContainer)
     |  Object for parsing command line strings into Python objects.
     |  
     |  Keyword Arguments:
     |      - prog -- The name of the program (default: sys.argv[0])
     |      - usage -- A usage message (default: auto-generated from arguments)
     |      - description -- A description of what the program does
     |      - epilog -- Text following the argument descriptions
     |      - parents -- Parsers whose arguments should be copied into this one
     |      - formatter_class -- HelpFormatter class for printing help messages
     |      - prefix_chars -- Characters that prefix optional arguments
     |      - fromfile_prefix_chars -- Characters that prefix files containing
     |          additional arguments
     |      - argument_default -- The default value for all arguments
     |      - conflict_handler -- String indicating how to handle conflicts
     |      - add_help -- Add a -h/-help option
     |      - allow_abbrev -- Allow long options to be abbreviated unambiguously
     |  
     |  Method resolution order:
     |      ArgumentParser
     |      _AttributeHolder
     |      _ActionsContainer
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, prog=None, usage=None, description=None, epilog=None, parents=[], formatter_class=<class 'argparse.HelpFormatter'>, prefix_chars='-', fromfile_prefix_chars=None, argument_default=None, conflict_handler='error', add_help=True, allow_abbrev=True)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  aadddd__ssuubbppaarrsseerrss(self, **kwargs)
     |      # ==================================
     |      # Optional/Positional adding methods
     |      # ==================================
     |  
     |  ccoonnvveerrtt__aarrgg__lliinnee__ttoo__aarrggss(self, arg_line)
     |  
     |  eerrrroorr(self, message)
     |      error(message: string)
     |      
     |      Prints a usage message incorporating the message to stderr and
     |      exits.
     |      
     |      If you override this in a subclass, it should not return -- it
     |      should either exit or raise an exception.
     |  
     |  eexxiitt(self, status=0, message=None)
     |      # ===============
     |      # Exiting methods
     |      # ===============
     |  
     |  ffoorrmmaatt__hheellpp(self)
     |  
     |  ffoorrmmaatt__uussaaggee(self)
     |      # =======================
     |      # Help-formatting methods
     |      # =======================
     |  
     |  ppaarrssee__aarrggss(self, args=None, namespace=None)
     |      # =====================================
     |      # Command line argument parsing methods
     |      # =====================================
     |  
     |  ppaarrssee__kknnoowwnn__aarrggss(self, args=None, namespace=None)
     |  
     |  pprriinntt__hheellpp(self, file=None)
     |  
     |  pprriinntt__uussaaggee(self, file=None)
     |      # =====================
     |      # Help-printing methods
     |      # =====================
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _AttributeHolder:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _AttributeHolder:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _ActionsContainer:
     |  
     |  aadddd__aarrgguummeenntt(self, *args, **kwargs)
     |      add_argument(dest, ..., name=value, ...)
     |      add_argument(option_string, option_string, ..., name=value, ...)
     |  
     |  aadddd__aarrgguummeenntt__ggrroouupp(self, *args, **kwargs)
     |  
     |  aadddd__mmuuttuuaallllyy__eexxcclluussiivvee__ggrroouupp(self, **kwargs)
     |  
     |  ggeett__ddeeffaauulltt(self, dest)
     |  
     |  rreeggiisstteerr(self, registry_name, value, object)
     |      # ====================
     |      # Registration methods
     |      # ====================
     |  
     |  sseett__ddeeffaauullttss(self, **kwargs)
     |      # ==================================
     |      # Namespace default accessor methods
     |      # ==================================
    
    class AArrgguummeennttTTyyppeeEErrrroorr(builtins.Exception)
     |  An error from trying to convert a command line string to a type.
     |  
     |  Method resolution order:
     |      ArgumentTypeError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____iinniitt____(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____rreepprr____(self, /)
     |      Return repr(self).
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ddiicctt____
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class FFiilleeTTyyppee(builtins.object)
     |  Factory for creating file object types
     |  
     |  Instances of FileType are typically passed as type= arguments to the
     |  ArgumentParser add_argument() method.
     |  
     |  Keyword Arguments:
     |      - mode -- A string indicating how the file is to be opened. Accepts the
     |          same values as the builtin open() function.
     |      - bufsize -- The file's desired buffer size. Accepts the same values as
     |          the builtin open() function.
     |      - encoding -- The file's encoding. Accepts the same values as the
     |          builtin open() function.
     |      - errors -- A string indicating how encoding and decoding errors are to
     |          be handled. Accepts the same value as the builtin open() function.
     |  
     |  Methods defined here:
     |  
     |  ____ccaallll____(self, string)
     |      Call self as a function.
     |  
     |  ____iinniitt____(self, mode='r', bufsize=-1, encoding=None, errors=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class HHeellppFFoorrmmaatttteerr(builtins.object)
     |  Formatter for generating usage messages and argument help strings.
     |  
     |  Only the name of this class is considered a public API. All the methods
     |  provided by the class are considered an implementation detail.
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, prog, indent_increment=2, max_help_position=24, width=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  aadddd__aarrgguummeenntt(self, action)
     |  
     |  aadddd__aarrgguummeennttss(self, actions)
     |  
     |  aadddd__tteexxtt(self, text)
     |  
     |  aadddd__uussaaggee(self, usage, actions, groups, prefix=None)
     |  
     |  eenndd__sseeccttiioonn(self)
     |  
     |  ffoorrmmaatt__hheellpp(self)
     |      # =======================
     |      # Help-formatting methods
     |      # =======================
     |  
     |  ssttaarrtt__sseeccttiioonn(self, heading)
     |      # ========================
     |      # Message building methods
     |      # ========================
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class MMeettaavvaarrTTyyppeeHHeellppFFoorrmmaatttteerr(HelpFormatter)
     |  Help message formatter which uses the argument 'type' as the default
     |  metavar value (instead of the argument 'dest')
     |  
     |  Only the name of this class is considered a public API. All the methods
     |  provided by the class are considered an implementation detail.
     |  
     |  Method resolution order:
     |      MetavarTypeHelpFormatter
     |      HelpFormatter
     |      builtins.object
     |  
     |  Methods inherited from HelpFormatter:
     |  
     |  ____iinniitt____(self, prog, indent_increment=2, max_help_position=24, width=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  aadddd__aarrgguummeenntt(self, action)
     |  
     |  aadddd__aarrgguummeennttss(self, actions)
     |  
     |  aadddd__tteexxtt(self, text)
     |  
     |  aadddd__uussaaggee(self, usage, actions, groups, prefix=None)
     |  
     |  eenndd__sseeccttiioonn(self)
     |  
     |  ffoorrmmaatt__hheellpp(self)
     |      # =======================
     |      # Help-formatting methods
     |      # =======================
     |  
     |  ssttaarrtt__sseeccttiioonn(self, heading)
     |      # ========================
     |      # Message building methods
     |      # ========================
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HelpFormatter:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class NNaammeessppaaccee(_AttributeHolder)
     |  Simple object for storing attributes.
     |  
     |  Implements equality by attribute names and values, and provides a simple
     |  string representation.
     |  
     |  Method resolution order:
     |      Namespace
     |      _AttributeHolder
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____ccoonnttaaiinnss____(self, key)
     |  
     |  ____eeqq____(self, other)
     |      Return self==value.
     |  
     |  ____iinniitt____(self, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ____hhaasshh____ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _AttributeHolder:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _AttributeHolder:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class RRaawwDDeessccrriippttiioonnHHeellppFFoorrmmaatttteerr(HelpFormatter)
     |  Help message formatter which retains any formatting in descriptions.
     |  
     |  Only the name of this class is considered a public API. All the methods
     |  provided by the class are considered an implementation detail.
     |  
     |  Method resolution order:
     |      RawDescriptionHelpFormatter
     |      HelpFormatter
     |      builtins.object
     |  
     |  Methods inherited from HelpFormatter:
     |  
     |  ____iinniitt____(self, prog, indent_increment=2, max_help_position=24, width=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  aadddd__aarrgguummeenntt(self, action)
     |  
     |  aadddd__aarrgguummeennttss(self, actions)
     |  
     |  aadddd__tteexxtt(self, text)
     |  
     |  aadddd__uussaaggee(self, usage, actions, groups, prefix=None)
     |  
     |  eenndd__sseeccttiioonn(self)
     |  
     |  ffoorrmmaatt__hheellpp(self)
     |      # =======================
     |      # Help-formatting methods
     |      # =======================
     |  
     |  ssttaarrtt__sseeccttiioonn(self, heading)
     |      # ========================
     |      # Message building methods
     |      # ========================
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HelpFormatter:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class RRaawwTTeexxttHHeellppFFoorrmmaatttteerr(RawDescriptionHelpFormatter)
     |  Help message formatter which retains formatting of all help text.
     |  
     |  Only the name of this class is considered a public API. All the methods
     |  provided by the class are considered an implementation detail.
     |  
     |  Method resolution order:
     |      RawTextHelpFormatter
     |      RawDescriptionHelpFormatter
     |      HelpFormatter
     |      builtins.object
     |  
     |  Methods inherited from HelpFormatter:
     |  
     |  ____iinniitt____(self, prog, indent_increment=2, max_help_position=24, width=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  aadddd__aarrgguummeenntt(self, action)
     |  
     |  aadddd__aarrgguummeennttss(self, actions)
     |  
     |  aadddd__tteexxtt(self, text)
     |  
     |  aadddd__uussaaggee(self, usage, actions, groups, prefix=None)
     |  
     |  eenndd__sseeccttiioonn(self)
     |  
     |  ffoorrmmaatt__hheellpp(self)
     |      # =======================
     |      # Help-formatting methods
     |      # =======================
     |  
     |  ssttaarrtt__sseeccttiioonn(self, heading)
     |      # ========================
     |      # Message building methods
     |      # ========================
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HelpFormatter:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)

DDAATTAA
    OONNEE__OORR__MMOORREE = '+'
    OOPPTTIIOONNAALL = '?'
    PPAARRSSEERR = 'A...'
    RREEMMAAIINNDDEERR = '...'
    SSUUPPPPRREESSSS = '==SUPPRESS=='
    ZZEERROO__OORR__MMOORREE = '*'
    ____aallll____ = ['ArgumentParser', 'ArgumentError', 'ArgumentTypeError', 'Fi...

VVEERRSSIIOONN
    1.1

FFIILLEE
    /home/nath/miniconda3/envs/deepl/lib/python3.6/argparse.py

